// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectPowerData;

namespace ProjectPowerData.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211228211427_etc123456")]
    partial class etc123456
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectPowerData.Folder.Models.BasicWorkoutInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExerciseDay")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Template")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BasicWorkoutInformation");

                    b.HasDiscriminator<string>("Template").HasValue("BasicWorkoutInformation");
                });

            modelBuilder.Entity("ProjectPowerData.Folder.Models.UserAccounts", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentDay")
                        .HasColumnType("int");

                    b.Property<int>("CurrentWeek")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Race")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("ProjectPowerData.Folder.Models.A2SHyperTrophy", b =>
                {
                    b.HasBaseType("ProjectPowerData.Folder.Models.BasicWorkoutInformation");

                    b.Property<int?>("AmrapRepResult")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("AmrapRepTarget")
                        .HasColumnType("int");

                    b.Property<bool>("AuxillaryLift")
                        .HasColumnType("bit");

                    b.Property<string>("Block")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Intensity")
                        .HasPrecision(9, 4)
                        .HasColumnType("decimal(9,4)");

                    b.Property<int>("RepsPerSet")
                        .HasColumnType("int");

                    b.Property<decimal>("RoundingValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<decimal>("TrainingMax")
                        .HasPrecision(9, 4)
                        .HasColumnType("decimal(9,4)");

                    b.Property<int>("Week")
                        .HasColumnType("int")
                        .HasColumnName("A2SHyperTrophy_Week");

                    b.HasDiscriminator().HasValue("A2SHyperTrophy");
                });

            modelBuilder.Entity("ProjectPowerData.Folder.Models.A2SRepsThenSets", b =>
                {
                    b.HasBaseType("ProjectPowerData.Folder.Models.BasicWorkoutInformation");

                    b.Property<int>("GoalReps")
                        .HasColumnType("int");

                    b.Property<int>("GoalSets")
                        .HasColumnType("int");

                    b.Property<int>("RepIncreasePerSet")
                        .HasColumnType("int");

                    b.Property<int>("StartingReps")
                        .HasColumnType("int");

                    b.Property<int>("StartingSets")
                        .HasColumnType("int");

                    b.Property<decimal>("StartingWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("A2SRepsThenSets");
                });
#pragma warning restore 612, 618
        }
    }
}
